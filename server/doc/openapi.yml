openapi: 3.0.1
info:
  title: Project Tomato
  description: 生活を便利にします
  version: v1.0.0
servers:
  - url: http://localhost:15000/tomato
    description: Generated server url
tags:
  - name: 冷蔵庫管理
    description: 冷蔵庫内の在庫管理
  - name: 注文
    description: 商品の注文機能
paths:
  /v1/refrigerator:
    get:
      tags:
        - 冷蔵庫管理
      summary: 冷蔵庫内の在庫一覧を取得する
      operationId: read
      parameters:
        - name: expired
          in: query
          description: 賞味期限/消費期限切れの在庫のみに絞り込む
          required: false
          schema:
            type: boolean
            default: false
          example: true
        - name: expiredBeforeDays
          in: query
          description: |-
            賞味期限/消費期限切れまであとx日の在庫に絞り込む

            expiredがtrueの場合は無効
          required: false
          schema:
            type: integer
            format: int64
          example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommonRefrigerator'
    put:
      tags:
        - 冷蔵庫管理
      summary: 冷蔵庫内の在庫を更新する
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrigeratorUpdateRequest'
        required: true
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - 冷蔵庫管理
      summary: 冷蔵庫内の在庫を新たに追加する
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrigeratorCreationRequest'
        required: true
      responses:
        '201':
          description: Created
    delete:
      tags:
        - 冷蔵庫管理
      summary: 冷蔵庫内の在庫を削除する
      operationId: delete
      parameters:
        - name: id
          in: query
          description: 削除対象のID
          required: true
          schema:
            type: integer
            format: int64
          example: 0
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/order:
    get:
      tags:
        - 注文
      summary: 注文一覧を取得する
      operationId: read_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommonRefrigerator'
    post:
      tags:
        - 注文
      summary: 注文を新たに追加する
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        '201':
          description: Created
  /v1/refrigerator/oos:
    delete:
      tags:
        - 冷蔵庫管理
      summary: 数量が0である冷蔵庫内の在庫をすべて削除する
      operationId: deleteOos
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
  /v1/refrigerator/expired:
    delete:
      tags:
        - 冷蔵庫管理
      summary: 賞味期限/消費期限が切れた冷蔵庫内の在庫をすべて削除する
      operationId: deleteExpired
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
  /v1/refrigerator/all:
    delete:
      tags:
        - 冷蔵庫管理
      summary: すべての冷蔵庫内の在庫を削除する
      operationId: deleteAll
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
components:
  schemas:
    RefrigeratorUpdateRequest:
      required:
        - id
        - name
      type: object
      properties:
        name:
          type: string
          description: 名称
          example: 牛乳
        quantity:
          type: integer
          description: 数量
          format: int64
          example: 4
        expiry:
          type: string
          description: 賞味期限/消費期限
          format: date-time
        id:
          type: integer
          description: 更新対象のID
          format: int64
          example: 0
    ErrorResponse:
      required:
        - errorCode
        - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          description: エラーコード
          example: A0000
        errorMessage:
          type: string
          description: エラーメッセージ
          example: The request is invalid.
    RefrigeratorCreationRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: 名称
          example: 牛乳
        quantity:
          type: integer
          description: 数量
          format: int64
          example: 4
        expiry:
          type: string
          description: 賞味期限/消費期限
          format: date-time
    OrderRequest:
      required:
        - productId
      type: object
      properties:
        productId:
          type: integer
          description: 商品ID
          format: int64
        quantity:
          type: integer
          description: 数量
          format: int64
          example: 4
    CommonRefrigerator:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int64
          example: 0
        name:
          type: string
          description: 名称
          example: 牛乳
        quantity:
          type: integer
          description: 数量
          format: int64
          example: 4
        expiry:
          type: string
          description: 賞味期限/消費期限
          format: date-time
